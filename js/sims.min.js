var app=angular.module("sims",["ngRoute","mgcrea.ngStrap","ngResource","ngAnimate","angular.morris","angular-loading-bar","ngCookies","btford.socket-io","angularMoment"]);app.run(["$rootScope","$route","$alert","socketService","$window","$cookieStore","$location","$window",function($rootScope,$route,$alert,socketService,$window,$cookieStore,$location){"use strict";socketService.on("feed",function(data){function JSONParser(valueSet){try{return JSON.parse(valueSet)}catch(e){return!1}return!0}var Alert={},content={};content.message=JSONParser(data).logContent,content.time=JSONParser(data).trnDate,Alert.content=JSON.stringify(content),Alert.type="info",Alert.title="Notification\n",$alert(Alert),content.message.search("Online")!=-1&&$window.location.reload()}),$rootScope.$on("$routeChangeSuccess",function(){"/"===$location.path()||$cookieStore.get("token")||$location.path("/"),$rootScope.loginUser=$cookieStore.get("loginUser")||"",$rootScope.JSONParser=function(valueSet){try{return JSON.parse(valueSet)}catch(e){return!1}return!0},$rootScope.title=$route.current.title,$rootScope.notifications={success:{count:5,messages:[{id:1,message:"New Templated has been added",route:"template"},{id:2,message:"New Operator has been added",route:"operator"},{id:3,message:"New Templated has been added"}]},warning:{count:4,messages:[{id:1,message:"This Template has been failed"},{id:2,message:"New Operator has been added"},{id:3,message:"New Templated has been added"}]},danger:{count:7,messages:[{id:1,message:"New Templated has been added"},{id:2,message:"New Operator has been added"},{id:3,message:"New Templated has been added"}]}}}),$rootScope.menuList=[{mainMenu:"Dashboard",route:"#/dashboard",active:!0,icon:"fa-dashboard",subMenuActive:!1,subMenu:[],originalPath:"/"},{mainMenu:"Subscriber",route:"#subscriber",active:!1,icon:"fa-mobile",subMenuActive:!1,subMenu:[],originalPath:"/subscriber"},{mainMenu:"Template",route:"#template",active:!1,icon:"fa-sticky-note-o",subMenuActive:!1,subMenu:[],originalPath:"/template"},{mainMenu:"Log",route:"#log/incoming",active:!1,icon:"fa-table",subMenuActive:!1,subMenu:[{title:"Incoming",route:"#log/incoming",active:!0,originalPath:"/log/incoming"},{title:"Outgoing",route:"#log/outgoing",active:!1,originalPath:"/log/outgoing"}],originalPath:"/log/incoming"},{mainMenu:"Operator",route:"#operator",active:!1,icon:"fa-wifi",subMenu:[],originalPath:"/operator"},{mainMenu:"Card Pool",route:"#cardpool",active:!1,icon:"fa-vcard-o",subMenuActive:!1,subMenu:[],originalPath:"/cardpool"}],$rootScope.clickOnMainMenu=function(index){$rootScope.menuList[index].active&&$rootScope.menuList[index].subMenuActive?$rootScope.menuList[index].subMenuActive=!1:(angular.forEach($rootScope.menuList,function(mainMenu){mainMenu.active=!1,mainMenu.subMenuActive=!1,angular.forEach(mainMenu.subMenu,function(sub){sub.active=!1})}),$rootScope.menuList[index].active=!0,$rootScope.menuList[index].subMenuActive=!0,$rootScope.menuList[index].subMenu.length&&($rootScope.menuList[index].subMenu[0].active=!0))},$rootScope.clickOnSubMenu=function(subMenu,index){angular.forEach(subMenu,function(sub){sub.active=!1}),subMenu[index].active=!0},$rootScope.logOut=function(){$cookieStore.remove("token"),$cookieStore.remove("loginUser"),$location.path("/")}}]),app.config(["$resourceProvider","$alertProvider","cfpLoadingBarProvider","$httpProvider",function($resourceProvider,$alertProvider,cfpLoadingBarProvider,$httpProvider){$resourceProvider.defaults.stripTrailingSlashes=!1,cfpLoadingBarProvider.includeBar=!1,cfpLoadingBarProvider.spinnerTemplate='<div><div id="overlay"><span class="loader"></span></div></div>',angular.extend($alertProvider.defaults,{animation:"am-fade-and-slide-top",placement:"top",container:"#alerts-container",show:!0,duration:5,templateUrl:"views/alert/alert.tpl.html"})}]),app.config(function($routeProvider,$locationProvider){$routeProvider.when("/dashboard",{title:"Dashboard",templateUrl:"views/index.html",controller:"dashboardController",resolve:{statistics:function(OperatorService,CountryService,dashBoardService,SubscriberService,CardPoolService,$q,$timeout){return $q.all([OperatorService.view().$promise,CountryService.view().$promise,SubscriberService.view({page:0,size:10,sort:"id"}).$promise,CardPoolService.view().$promise]).then(function(result){return{operators_count:result[0].length,countries_count:result[1].length,subscriber_count:result[2].totalElements,card_count:result[3].length}})}}}).when("/template",{title:"Template Admin",templateUrl:"views/template/admin.html",controller:"templateController",resolve:{Templates:function(TemplateService,OperatorService,CountryService,$q,$location){return $q.all([TemplateService.view({page:0,size:10,sort:"id"}).$promise,TemplateService.types().$promise,OperatorService.view().$promise,CountryService.view().$promise]).then(function(result){return{templateDetails:result[0],types:result[1],operators:result[2],countries:result[3]}})}}}).when("/subscriber",{title:"Subscriber",templateUrl:"views/subscriber/subscriber.html",controller:"subscriberController",resolve:{Subscribers:function(SubscriberService,CountryService,OperatorService,CardPoolService,$q){return $q.all([SubscriberService.view({page:0,size:10,sort:"id"}).$promise,CountryService.view().$promise,OperatorService.view().$promise,CardPoolService.getCardType({page:0,size:100,sort:"id"}).$promise]).then(function(result){return{subscriberDetails:result[0],countries:result[1],operators:result[2],cardTypes:result[3]}})}}}).when("/log/:logType",{title:"Message Log",templateUrl:"views/log/admin.html",controller:"logController",resolve:{Logs:function(LogService,TemplateService,OperatorService,CountryService,$q,$location){return $q.all([TemplateService.types().$promise,OperatorService.view().$promise,CountryService.view().$promise]).then(function(result){return{types:result[0],operators:result[1],countries:result[2]}})}}}).when("/delivery-log",{title:"Delivery Log",templateUrl:"views/log/deliveryLog.html",controller:"deliveryLogController",resolve:{Logs:function(DeliveryLogService,$q,$location){return $q.all([DeliveryLogService.view().$promise]).then(function(result){return{logDetails:result[0]}})}}}).when("/template-new",{title:"Template New",templateUrl:"views/template/new.html",controller:"templateNewController"}).when("/operator-new",{title:"New Operator",templateUrl:"views/operator/new.html",controller:"operatorNewController",resolve:{Operators:function(CountryService,$q){return $q.all([CountryService.view().$promise]).then(function(result){return{countries:result[0]}})}}}).when("/operator",{title:"Operator Admin",templateUrl:"views/operator/admin.html",controller:"operatorController",resolve:{Operators:function(OperatorService,CountryService,$q){return $q.all([OperatorService.view().$promise,CountryService.view().$promise]).then(function(result){return{operators:result[0],countries:result[1]}})}}}).when("/operator-edit",{title:"Edit Operator",templateUrl:"views/operator/edit.html",controller:"operatorEditController"}).when("/crm/:type",{title:"CRM",templateUrl:"views/crm/admin.html",controller:"crmController",resolve:{Operators:function(OperatorService,CountryService,$q){return $q.all([OperatorService.view().$promise,CountryService.view().$promise]).then(function(result){return{operators:result[0],countries:result[1]}})}}}).when("/add-new-card",{title:"Add New Card",templateUrl:"views/cardPool/addNewCard.html",controller:"addNewCardController",resolve:{newCard:function(OperatorService,CountryService,CardPoolService,$q){return $q.all([CountryService.view().$promise,OperatorService.view().$promise,CardPoolService.getCardType().$promise]).then(function(result){return{countries:result[0],operators:result[1],cardTypes:result[2]}})}}}).when("/cardpool",{title:"Card Pool",templateUrl:"views/cardPool/cardPool.html",controller:"cardPoolController",resolve:{cardPool:function(OperatorService,CountryService,CardPoolService,$q){return $q.all([CountryService.view().$promise,OperatorService.view().$promise,CardPoolService.view({page:0,size:10,sort:"id"}).$promise,CardPoolService.getCardType({page:0,size:100,sort:"id"}).$promise]).then(function(result){return{countries:result[0],operators:result[1],cardList:result[2],cardTypes:result[3]}})}}}).when("/view-card-type",{title:"View Card Type",templateUrl:"views/cardPool/viewCardTypes.html",controller:"viewCardTypesController",resolve:{cardTypeDetails:function(OperatorService,CountryService,CardPoolService,$q){return $q.all([CountryService.view().$promise,OperatorService.view().$promise,CardPoolService.view().$promise,CardPoolService.getCardType({page:0,size:10,sort:"id"}).$promise]).then(function(result){return{countries:result[0],operators:result[1],cardList:result[2],cardTypes:result[3]}})}}}).when("/",{title:"login",templateUrl:"login/login.html",controller:"loginController"}).otherwise({redirectTo:"/"})}),app.service("resourceErrorHandler",function($alert){var Alert={};return function(res){Alert.title=res.status.toString(),404==res.status?(Alert.content='{"message" : "Something wrong with the API"}',Alert.type="warning"):405==res.status?(Alert.content='{"message" : "Method not allowed"}',Alert.type="warning"):403==res.status?(Alert.content='{"message" : "Forbidden"}',Alert.type="warning"):500==res.status&&(Alert.content='{"message" : "Server Error"}',Alert.type="warning"),$alert(Alert)}}),app.service("resourceSuccessHandler",function($alert){var Alert={};return function(res){return Alert.title=res.status.toString(),200==res.status&&(Alert.content={},Alert.content='{"message" : "Your request has been successful"}',Alert.type="success"),$alert(Alert),res.data}}),app.service("TemplateService",function($resource,$alert,resourceSuccessHandler,resourceErrorHandler,host){return $resource(host.get()+"/sims-template-api/template/view/:id",{},{view:{method:"GET",interceptor:{responseError:resourceErrorHandler}},findTemplateById:{url:host.get()+"/sims-template-api/template/findTemplateById/:id",method:"GET",interceptor:{}},viewByFilter:{url:host.get()+"/sims-template-api/template/view",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},save:{url:host.get()+"/sims-template-api/template/create",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},update:{url:host.get()+"/sims-template-api/template/update",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},types:{url:host.get()+"/sims-template-api/template/types",method:"POST",isArray:!0,interceptor:{responseError:resourceErrorHandler}},validate:{url:host.get()+"/sims-template-api/template/validate",method:"POST",interceptor:{responseError:resourceErrorHandler}},delete:{url:host.get()+"/sims-template-api/template/delete/:id",method:"DELETE",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}}})}),app.service("OperatorService",function($resource,$alert,resourceErrorHandler,host,resourceSuccessHandler){return $resource(host.get()+"/sims-operator-api/operator/view:id",{},{view:{method:"GET",isArray:!0,interceptor:{responseError:resourceErrorHandler}},save:{url:host.get()+"/sims-operator-api/operator/create",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},query:{method:"GET",isArray:!0,interceptor:{responseError:resourceErrorHandler}},remove:{method:"DELETE",interceptor:{responseError:resourceErrorHandler}},delete:{url:host.get()+"/sims-operator-api/operator/delete/:id",method:"DELETE",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}}})}),app.service("CountryService",function($resource,$alert,resourceErrorHandler,host){return $resource(host.get()+"/sims-operator-api/country/view/:id",{},{view:{method:"GET",isArray:!0,interceptor:{responseError:resourceErrorHandler}},save:{url:host.get()+"template/create",method:"POST",isArray:!0,interceptor:{responseError:resourceErrorHandler}},types:{url:host.get()+"template/types",method:"POST",isArray:!0,interceptor:{responseError:resourceErrorHandler}},remove:{method:"DELETE",interceptor:{responseError:resourceErrorHandler}},delete:{method:"DELETE",interceptor:{responseError:resourceErrorHandler}}})}),app.service("LogService",function($resource,$alert,resourceSuccessHandler,resourceErrorHandler,host){return $resource(host.get()+"/sims-log-api/log/viewSms",{},{view:{method:"GET",interceptor:{responseError:resourceErrorHandler}},viewByFilter:{url:host.get()+"/sims-template-api/smslog/view",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},save:{url:host.get()+"/sims-template-api/template/create",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},update:{url:host.get()+"/sims-template-api/template/update",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},delete:{url:host.get()+"/sims-template-api/template/delete",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},outgoingLog:{url:host.get()+"/sims-log-api/log/view",method:"GET",interceptor:{responseError:resourceErrorHandler}}})}),app.factory("socketService",function(socketFactory,$rootScope){var socket=io.connect("http://lk.techleadintl.com:3001");return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})}}}),app.service("host",function(){var url="http://lk.techleadintl.com:8086";return{get:function(){return url}}}),app.service("SubscriberService",function($resource,$alert,resourceErrorHandler,resourceSuccessHandler,host){return $resource(host.get()+"/sims-subscriber-api/subscriber/view/:id",{},{view:{method:"GET",interceptor:{responseError:resourceErrorHandler}},findSubscriberById:{url:host.get()+"/sims-subscriber-api/subscriber/findSubscriberById/:id",method:"GET",interceptor:{}},viewByFilter:{url:host.get()+"/sims-subscriber-api/subscriber/search",method:"POST",interceptor:{responseError:resourceErrorHandler}},sendCard:{url:host.get()+"/sims-subscriber-api/subscriber/sendCard",method:"POST",isArray:!0,interceptor:{responseError:resourceErrorHandler}},query:{url:host.get()+"/sims-subscriber-api/subscriber/querySubscriber",method:"POST",interceptor:{responseError:resourceErrorHandler}},save:{url:host.get()+"/sims-subscriber-api/subscriber/create",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},update:{url:host.get()+"/sims-subscriber-api/subscriber/update",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},delete:{url:host.get()+"/sims-subscriber-api/subscriber/delete/:id",method:"DELETE",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},getAllocatedPackages:{url:host.get()+"/sims-subscriber-api/subscriber/getAvailablePackagesForUser",method:"POST",isArray:!0,interceptor:{responseError:resourceErrorHandler}},reserveCard:{url:host.get()+"/sims-subscriber-api/subscriber/reserveCardForUser",method:"POST",interceptor:{responseError:resourceErrorHandler}},cancelTransaction:{url:host.get()+"/sims-subscriber-api/subscriber/cancelTransaction/:id",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},sendCard:{url:host.get()+"/sims-subscriber-api/subscriber/confirmTransaction",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}}})}),app.service("CardPoolService",function($resource,$alert,resourceSuccessHandler,resourceErrorHandler,host){return $resource(host.get()+"/sims-cardpool-service/card/:active",{},{view:{url:host.get()+"/sims-cardpool-service/card/viewActive",method:"GET",interceptor:{responseError:resourceErrorHandler}},getCardDetail:{url:host.get()+":id/",method:"POST",isArray:!0,interceptor:{responseError:resourceErrorHandler}},addNewCard:{url:host.get()+"/sims-cardpool-service/card/create",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},updateCard:{url:host.get()+"/sims-cardpool-service/card/update",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},deleteCard:{url:host.get()+"/sims-cardpool-service/card/delete/:id",method:"DELETE",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},addCardType:{url:host.get()+"/sims-cardpool-service/cardType/create",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},getCardType:{url:host.get()+"/sims-cardpool-service/cardType/viewActive",method:"GET",interceptor:{responseError:resourceErrorHandler}},deleteCardType:{url:host.get()+"/sims-cardpool-service/cardType/delete/:id",method:"DELETE",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}},updateCardType:{url:host.get()+"/sims-cardpool-service/cardType/update",method:"POST",interceptor:{response:resourceSuccessHandler,responseError:resourceErrorHandler}}})}),app.service("dashBoardService",function($resource,$alert,resourceSuccessHandler,resourceErrorHandler,host){return $resource(host.get()+"/dashboard/view",{},{view:{method:"GET",interceptor:{responseError:resourceErrorHandler}}})}),app.service("PaginationService",function(){this.generatePagination=function(totalPages,page){for(var pagination=[],i=0;i<totalPages;i++)pagination.push({id:i,active:!1});return pagination[page].active=!0,pagination},this.checkLimitStart=function(page,length){var limitStart=0,limit=10;if(limit<length){var end=page+limit-1;if(length<=end){var diff=end-length;limitStart=end-limit-diff}}return limitStart}}),app.service("CrmService",function($resource,$alert,resourceSuccessHandler,resourceErrorHandler,host){return $resource(host.get()+"/sims-template-api/template/view/:id",{},{view:{method:"GET",interceptor:{responseError:resourceErrorHandler}}})}),app.controller("dashboardController",["$scope","statistics","$timeout",function($scope,statistics,$timeout){$scope.statistics=statistics,$scope.incomingMessage=[{label:"Success",value:125},{label:"Fail",value:23}],$scope.outgoingMessage=[{label:"Success",value:225},{label:"Fail",value:20}],$scope.operatorWiseSubscriber=[{y:"SMART",a:5,b:100},{y:"CUGSM",a:10,b:65},{y:"MOBITEL",a:8,b:80},{y:"HUTCH",a:75,b:65}],$timeout(function(){$("#bar_chart").empty(),$("#bar_chart_card").empty(),$("#donut_incoming").empty(),$("#donut_outgoing").empty(),Morris.Area({element:"bar_chart",data:[{y:"Smart",a:100,b:90},{y:"Metfone",a:75,b:65},{y:"cellcard",a:50,b:40},{y:"seatel",a:75,b:65},{y:"qb",a:50,b:40},{y:"Mobitel",a:50,b:95}],xkey:"y",ykeys:["a","b"],parseTime:!1,labels:["Active","Inactive"],lineColors:["#31C0BE","#c7254e"]}),Morris.Bar({element:"bar_chart_card",data:[{y:"Smart",a:100,b:90},{y:"Metfone",a:75,b:65},{y:"cellcard",a:50,b:40},{y:"seatel",a:75,b:65},{y:"qb",a:50,b:40},{y:"Mobitel",a:75,b:65}],xkey:"y",ykeys:["a","b"],labels:["Series A","Series B"]}),Morris.Donut({element:"donut_incoming",data:[{label:"Success",value:125},{label:"Fail",value:23}]}),Morris.Donut({element:"donut_outgoing",data:[{label:"Success",value:225},{label:"Fail",value:20}]})},1)}]),app.controller("templateController",["$scope","$modal","TemplateService","Templates","$location","PaginationService",function($scope,$modal,TemplateService,Templates,$location,PaginationService){function change_size(){$scope.tableHeight=$(window).height()-180-$(".table-scroll").height()}function managePagination(templateDetails){$scope.templates=templateDetails.content,$scope.totalPages=templateDetails.totalPages,$scope.isFirstPage=templateDetails.first,$scope.isLastPage=templateDetails.last,$scope.page=templateDetails.number,$scope.pagination=[],$scope.totalPages>1&&($scope.pagination=PaginationService.generatePagination($scope.totalPages,$scope.page)),$scope.limitStart=PaginationService.checkLimitStart($scope.page,$scope.pagination.length)}function manageTemplateTypes(templateTypes){return angular.forEach(templateTypes,function(template){template.type.indexOf("request")>-1?template.isRequest=!0:template.isRequest=!1}),templateTypes}function checkArrayExists(id,dataArray){for(var isExists=!1,i=0;i<dataArray.length;i++)if(dataArray[i]===id){isExists=!0;break}return isExists}function FilterOption(){this.mcc="",this.mnc="",this.country="",this.templateType=""}function editTemplate(template){var editTemplateScope=$scope.$new(!0);editTemplateScope.templateEdit=angular.copy(template),editTemplateScope.templateEdit.isValidTemplate=!1,editTemplateScope.countries=Templates.countries,editTemplateScope.operators=Templates.operators,editTemplateScope.types=Templates.types,editTemplateScope.templateEdit.method=template.method||"SMS",editTemplateScope.submitted=!1,editTemplateScope.submitValidation=!1,editTemplateScope.selectedEvent="",editTemplateScope.templateEdit.events=[],editTemplateScope.eventList=angular.copy($scope.eventList),editTemplateScope.templateEdit.templateType.isRequest=_.find();var operators=[];editTemplateScope.selectCountry=function(id){operators=[];for(var i=0;i<Templates.operators.length;i++)id==Templates.operators[i].country.id&&operators.push(Templates.operators[i]);editTemplateScope.operators=operators},editTemplateScope.editTemplateSubmit=function(templateAfterEdit){editTemplateScope.submitted=!0,templateAfterEdit.operator&&templateAfterEdit.templateType&&TemplateService.update(templateAfterEdit,function(response){angular.merge(template,response),modalEdit.$promise.then(modalEdit.hide)})},editTemplateScope.$watch("templateEdit.templateText",function(oldVal,newVal){editTemplateScope.templateEdit.isValidTemplate=!1}),editTemplateScope.validate=function(template,sample){editTemplateScope.submitValidation=!0,template&&sample&&TemplateService.validate({template:template,sample:sample},function(response){editTemplateScope.templateEdit.isValidTemplate=response.status})},editTemplateScope.setTempType=function(templateType){var temp=templateType.split(" ");editTemplateScope.templateType=temp[1],editTemplateScope.templateNew.method="SMS",editTemplateScope.templateNew.destination="",editTemplateScope.eventList=angular.copy($scope.eventList)},editTemplateScope.setEvent=function(event){},modalEdit=$modal({scope:editTemplateScope,templateUrl:"views/template/edit.html",show:!0})}function templateNew(){newTemplateScope=$scope.$new(!0),newTemplateScope.templateNew={},newTemplateScope.templateNew.isValidTemplate=!1,newTemplateScope.templateNew.template_patten=/\(\?\<(.*?)\>/,newTemplateScope.templateNew.method="SMS",newTemplateScope.templateType="",newTemplateScope.selectedEvent="",newTemplateScope.countries=Templates.countries,newTemplateScope.operators=Templates.operators,newTemplateScope.types=Templates.types,newTemplateScope.eventList=angular.copy($scope.eventList),newTemplateScope.submitted=!1,newTemplateScope.submitValidation=!1;var operators=[];newTemplateScope.selectCountry=function(id){operators=[];for(var i=0;i<Templates.operators.length;i++)id==Templates.operators[i].country.id&&operators.push(Templates.operators[i]);newTemplateScope.operators=operators},newTemplateScope.selectMethod=function(isSMS){newTemplateScope.templateNew.isSMS=isSMS},newTemplateScope.newTemplateSubmit=function(templateNew){newTemplateScope.submitted=!0,newTemplateScope.templateNew.operator&&templateNew.templateType&&TemplateService.save(templateNew,function(response){loadPage($scope.totalPages-1),modal.$promise.then(modal.hide)})},newTemplateScope.setTempType=function(templateType){var temp=templateType.split(" ");newTemplateScope.templateType=temp[1],newTemplateScope.templateNew.method="SMS",newTemplateScope.templateNew.destination="",newTemplateScope.eventList=angular.copy($scope.eventList)},newTemplateScope.validate=function(template,sample){newTemplateScope.submitValidation=!0,template&&sample&&TemplateService.validate({template:template,sample:sample},function(response){newTemplateScope.templateNew.isValidTemplate=response.status})},newTemplateScope.templateNew.groups=[];var myRegexp=/\(\?\<(.*?)\>/gm;newTemplateScope.$watch("templateNew.template",function(newVal,oldVal){var match=myRegexp.exec(newVal);match&&newTemplateScope.templateNew.groups.push(match[1])},!0),newTemplateScope.setEvent=function(event){},modal=$modal({scope:newTemplateScope,templateUrl:"views/template/new.html",show:!0})}function loadPage(pageNo){TemplateService.view({page:pageNo,size:$scope.pageSize,sort:"id"},function(response){managePagination(response)})}if($scope.pageSize=10,$scope.pagination=[],$scope.tableHeight=400,$scope.eventList=[{id:1,value:"Send Balance Request"},{id:2,value:"Send Reload Request"},{id:3,value:"Send System Notification"},{id:4,value:"Send Data Balance Request"}],change_size(),"undefined"!=typeof Templates.templateDetails&&(managePagination(Templates.templateDetails),"undefined"!=typeof Templates.types&&($scope.types=manageTemplateTypes(Templates.types),"undefined"!=typeof Templates.countries))){$scope.countries=Templates.countries,$scope.mncs=[],$scope.mccs=[];for(var i=0;i<Templates.operators.length;i++)checkArrayExists(Templates.operators[i].mnc,$scope.mncs)||$scope.mncs.push(Templates.operators[i].mnc),checkArrayExists(Templates.operators[i].mcc,$scope.mccs)||$scope.mccs.push(Templates.operators[i].mcc);$scope.filterOption=new FilterOption,$scope.selectMNC=function(bla){},$scope.selectFilterOption=function(){},$scope.selectCountry=function(id){$scope.mncs=[],$scope.mccs=[];for(var i=0;i<Templates.operators.length;i++)id==Templates.operators[i].country.id&&(checkArrayExists(Templates.operators[i].mnc,$scope.mncs)||$scope.mncs.push(Templates.operators[i].mnc),checkArrayExists(Templates.operators[i].mcc,$scope.mccs)||$scope.mccs.push(Templates.operators[i].mcc))};var newTemplateScope,modal,modalEdit;if($scope.templateEdit=function(template){editTemplate(template)},$scope.newTemplate=function(){templateNew()},$location.search().id&&"0"!==$location.search().id){var template;TemplateService.findTemplateById({id:$location.search().id},function(response){template=response,editTemplate(template)})}else $location.search().id&&"0"===$location.search().id&&templateNew();$scope.templateDelete=function(template){TemplateService.delete({id:template.id},function(){loadPage($scope.page)})},$scope.loadNextPage=function(id){loadPage(id)},$scope.pageNavigation=function(type){"prev"===type?($scope.page=$scope.page-1,loadPage($scope.page)):($scope.page=$scope.page+1,loadPage($scope.page))}}}]),app.controller("operatorController",["$scope","$modal","OperatorService","Operators",function($scope,$modal,OperatorService,Operators){if("undefined"!=typeof Operators.countries&&($scope.countries=Operators.countries,"undefined"!=typeof Operators.operators)){$scope.operators=Operators.operators;var modalEdit;$scope.operatorEdit=function(operator){var editOperatorScope=$scope.$new(!0);editOperatorScope.operatorEdit=operator,editOperatorScope.countries=Operators.countries,editOperatorScope.submitForm=!1,editOperatorScope.editOperatorSubmit=function(operatorAfterEdit){editOperatorScope.submitForm=!1,editOperatorScope.operatorEdit.country.id&&editOperatorScope.operatorEdit.operatorName&&editOperatorScope.operatorEdit.mnc&&editOperatorScope.operatorEdit.mcc&&OperatorService.save(operatorAfterEdit,function(){modalEdit.$promise.then(modalEdit.hide)})},modalEdit=$modal({scope:editOperatorScope,templateUrl:"views/operator/edit.html",show:!0})},$scope.operatorDelete=function(operator){OperatorService.delete({id:operator.id},function(){$scope.operators.splice($scope.operators.indexOf(operator),1)})}}}]),app.controller("operatorNewController",["$scope","OperatorService","Operators",function($scope,OperatorService,Operators){$scope.countries=Operators.countries,$scope.submitForm=!1,$scope.operatorSave=function(operator){$scope.submitForm=!0,operator.country.id&&operator.operatorName&&operator.mnc&&operator.mcc&&OperatorService.save(operator,function(response){})}}]),app.controller("logController",["$scope","Logs","LogService","$routeParams","PaginationService","SubscriberService","TemplateService",function($scope,Logs,LogService,$routeParams,PaginationService,SubscriberService,TemplateService){function getTabIndex(tabType){for(var index="",i=0;i<$scope.tabs.length;i++)if($scope.tabs[i].type===tabType)return index=i}function IncomingFilterOption(){this.smsType="",this.country="",this.date="",this.status=""}function managePagination(messageDetails,type){$scope[type].isFirstPage=messageDetails.first,$scope[type].isLastPage=messageDetails.last,$scope[type].page=messageDetails.number,$scope[type].totalPages=messageDetails.totalPages,$scope[type].pagination=[],$scope[type].totalPages>1&&($scope[type].pagination=PaginationService.generatePagination($scope[type].totalPages,$scope[type].page)),$scope[type].limitStart=PaginationService.checkLimitStart($scope[type].page,$scope[type].pagination.length)}function mapSubscriber(){angular.forEach($scope.incoming.messageLogs,function(message){SubscriberService.findSubscriberById({id:message.subscriberFk},function(response){message.subscriber=response})}),angular.forEach($scope.incoming.messageLogs,function(message){TemplateService.findTemplateById({id:message.templateFk},function(response){message.template=response})})}function loadContent(){"incoming"===$scope.tabs[$scope.selectedTab].type?LogService.view({page:$scope.incoming.page,size:$scope.pageSize,sort:"id"},function(response){$scope.incoming.messageLogs=response.content,mapSubscriber(),managePagination(response,"incoming")}):"outgoing"===$scope.tabs[$scope.selectedTab].type&&LogService.outgoingLog({page:$scope.outgoing.page,size:$scope.outPageSize,sort:"logDate"},function(response){$scope.outgoing.messageLogs=_.groupBy(response.content,"processId"),managePagination(response,"outgoing")})}function JSONParser(valueSet){try{return JSON.parse(valueSet)}catch(e){return!1}return!0}function loadIncomingPage(pageNo){LogService.view({page:pageNo,size:$scope.pageSize,sort:"id"},function(response){$scope.incoming.messageLogs=response.content,mapSubscriber(),managePagination(response,"incoming")})}function loadOutgoingPage(pageNo){LogService.outgoingLog({page:pageNo,size:$scope.outPageSize,sort:"logDate"},function(response){$scope.outgoing.messageLogs=_.groupBy(response.content,"processId"),managePagination(response,"outgoing")})}function changeTableSize(){$scope.tableHeight=$(window).height()-265}if($scope.pageSize=10,$scope.outPageSize=20,$scope.tableHeight=400,$scope.tabs=[{title:"Incoming",url:"views/log/smsIncomingLog.html",active:!0,type:"incoming"},{title:"Outgoing",url:"views/log/smsOutgoingLog.html",active:!1,type:"outgoing"}],$scope.incommingFilter=new IncomingFilterOption,$scope.selectIncomingFilterOption=function(){},$scope.selectedTab=0,$scope.incoming={},$scope.outgoing={},$scope.incoming.page=0,$scope.outgoing.page=0,$routeParams.logType){angular.forEach($scope.tabs,function(tab){tab.active=!1});var index=getTabIndex($routeParams.logType);$scope.tabs[index].active=!0,$scope.selectedTab=index,loadContent()}"undefined"!=typeof Logs.types&&($scope.types=Logs.types,"undefined"!=typeof Logs.countries&&($scope.countries=Logs.countries,$scope.selectedVlues="test",$scope.popover={title:"Values",content:"test"},$scope.outGoingPopover={title:"Steps",content:"steps"},$scope.JSONParser=function(valueSet){return JSONParser(valueSet)},$scope.statusFilter=function(status){$scope.incommingFilter.status=status},$scope.showDescription=function(log){$scope.description=log,$scope.description_panel=!0},$scope.selectRecord=function(value){$scope.selectedVlues=value},$scope.selectOutGoingRecord=function(step){$scope.selectedOutRecord=step},$scope.loadNextPage=function(id,logType){"incoming"===logType?loadIncomingPage(id):loadOutgoingPage(id)},$scope.pageNavigation=function(type,logType){"prev"===type?($scope[logType].page=$scope[logType].page-1,"incoming"===logType?loadIncomingPage($scope[logType].page):loadOutgoingPage($scope[logType].page)):($scope[logType].page=$scope[logType].page+1,
"incoming"===logType?loadIncomingPage($scope[logType].page):loadOutgoingPage($scope[logType].page))},$scope.trimMessage=function(message){var text=message;return message&&message.length>30&&(text=message.substring(0,30)),text},$scope.formatDate=function(selectedDate){return selectedDate},$scope.tabClick=function(index){angular.forEach($scope.tabs,function(tab){tab.active=!1}),$scope.selectedTab=index,$scope.tabs[index].active=!0,loadContent()},changeTableSize()))}]),app.controller("loginController",["$scope","$http","$cookieStore","$location","$rootScope",function($scope,$http,$cookieStore,$location,$rootScope){function pageNavigation(){$cookieStore.get("token")?$location.path("/dashboard"):$location.path("/")}function doLogin(){var param={};param.userName=$scope.userName,param.password=$scope.password;"admin"===$scope.userName&&"admin"===$scope.password&&($cookieStore.put("token","1232134124"),$cookieStore.put("loginUser",$scope.userName),$rootScope.loginUser=$scope.userName,$location.path("/dashboard"))}$scope.userName="",$scope.password="",$scope.login_error=!1,Morris.Donut.prototype.resizeHandler=function(){if(document.getElementById(this.el[0].id))return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},pageNavigation(),$scope.login=function(){$scope.submitted=!0,$scope.password&&$scope.password&&doLogin()}}]),app.controller("subscriberController",["$scope","SubscriberService","$modal","Subscribers","$interval","PaginationService","$timeout",function($scope,SubscriberService,$modal,Subscribers,$interval,PaginationService,$timeout){function FilterOption(){this.active="active",this.countryId=null,this.operatorId=null}function changeTableSize(){$scope.tableHeight=$(window).height()-200-$(".table-cus-header").height()}function managePagination(subscriberDetails){$scope.subscriberList=subscriberDetails.content,$scope.totalPages=subscriberDetails.totalPages,$scope.isFirstPage=subscriberDetails.first,$scope.isLastPage=subscriberDetails.last,$scope.page=subscriberDetails.number,$scope.pagination=[],$scope.totalPages>1&&($scope.pagination=PaginationService.generatePagination($scope.totalPages,$scope.page)),$scope.limitStart=PaginationService.checkLimitStart($scope.page,$scope.pagination.length)}function loadPage(pageNo){SubscriberService.view({page:pageNo,size:$scope.pageSize,sort:"id"},function(response){managePagination(response)})}$scope.selectedUser="",$scope.tableHeight=400,$scope.filter={country:"",status:""},$scope.filterOption=new FilterOption,$scope.pageSize=10,$scope.pagination=[],$scope.selectFilterOption=function(){SubscriberService.viewByFilter({page:0,size:10,sort:"id"},$scope.filterOption,function(response){managePagination(response)})},changeTableSize(),"undefined"!=typeof Subscribers.countries&&($scope.countries=Subscribers.countries,"undefined"!=typeof Subscribers.operators&&($scope.operators=angular.copy(Subscribers.operators),"undefined"!=typeof Subscribers.cardTypes&&($scope.cardTypes=Subscribers.cardTypes.content,"undefined"!=typeof Subscribers.subscriberDetails&&(managePagination(Subscribers.subscriberDetails),$scope.selectRecord=function(item){$scope.selectedUser=item},$scope.doReload=function(subscriber){$scope.selectedSubscriber=subscriber;var reloadTemplateScope=$scope.$new(!0);reloadTemplateScope.reloadData={},reloadTemplateScope.selectedCardType={},reloadTemplateScope.selectedCard={},reloadTemplateScope.transaction={},reloadTemplateScope.transaction.transactionNote="",reloadTemplateScope.transaction.transactionId="",reloadTemplateScope.selectedSubscriber=$scope.selectedSubscriber,reloadTemplateScope.loadingStart=!1,SubscriberService.getAllocatedPackages({imei:$scope.selectedSubscriber.imei},function(response){reloadTemplateScope.cardTypes=response}),reloadTemplateScope.confirmCardType=function(){SubscriberService.reserveCard({imei:$scope.selectedSubscriber.imei,cardTypeId:reloadTemplateScope.selectedCardType.id},function(response){reloadTemplateScope.selectedCard=response.card,reloadTemplateScope.transaction.transactionId=response.transactionId})},reloadTemplateScope.selectCardType=function(type){reloadTemplateScope.selectedCardType=type},reloadTemplateScope.cancel=function(){angular.element(".modal").trigger("click"),reloadTemplateScope.selectedCardType="",reloadTemplateScope.selectedCard={},reloadTemplateScope.transactionNote=""},reloadTemplateScope.reload=function(){SubscriberService.sendCard(reloadTemplateScope.transaction,function(){angular.element(".modal").trigger("click")}),angular.element(".modal").trigger("click")};$modal({scope:reloadTemplateScope,templateUrl:"views/subscriber/reload.html",show:!0})},$scope.selectCountry=function(id){var operators=[];$scope.operators=angular.copy(Subscribers.operators);for(var i=0;i<$scope.operators.length;i++)id==$scope.operators[i].country.id&&operators.push($scope.operators[i]);$scope.operators=operators},$scope.selectOperator=function(id){var operator=_.find($scope.operators,{id:id});$scope.filterOption.countryId=operator.country.id},$scope.loadNextPage=function(id){loadPage(id)},$scope.pageNavigation=function(type){"prev"===type?($scope.page=$scope.page-1,loadPage($scope.page)):($scope.page=$scope.page+1,loadPage($scope.page))},$scope.querySubscriber=function(subscriber){SubscriberService.query(subscriber,function(response){})},$scope.editSubscriber=function(selectedItem){var editSubscriberScope=$scope.$new(!0);editSubscriberScope.selectedItem=angular.copy(selectedItem),editSubscriberScope.countries=$scope.countries,editSubscriberScope.operators=$scope.operators,editSubscriberScope.cardTypes=$scope.cardTypes,editSubscriberScope.submitForm=!1,editSubscriberScope.type="Edit",editSubscriberScope.close=function(){angular.element(".modal").trigger("click")},editSubscriberScope.editSubscriber=function(){editSubscriberScope.submitForm=!0,editSubscriberScope.selectedItem.operator&&editSubscriberScope.selectedItem.imei&&SubscriberService.update(editSubscriberScope.selectedItem,function(result){loadPage($scope.page),angular.element(".modal").trigger("click")})},editSubscriberScope.selectCountry=function(country){for(var operators=[],i=0;i<editSubscriberScope.operators.length;i++)country.id===editSubscriberScope.operators[i].country.id&&operators.push(editSubscriberScope.operators[i]);editSubscriberScope.operators=operators};$modal({scope:editSubscriberScope,templateUrl:"views/subscriber/addEditSubscriber.html",show:!0})},$scope.addSubscriber=function(){var addSubscriberScope=$scope.$new(!0);addSubscriberScope.selectedItem={},addSubscriberScope.selectedItem.operator={country:{id:""}},addSubscriberScope.countries=$scope.countries,addSubscriberScope.operators=$scope.operators,addSubscriberScope.cardTypes=$scope.cardTypes,addSubscriberScope.submitForm=!1,addSubscriberScope.type="Add",addSubscriberScope.close=function(){angular.element(".modal").trigger("click")},addSubscriberScope.editSubscriber=function(){SubscriberService.update(addSubscriberScope.selectedItem,function(result){loadPage($scope.page),angular.element(".modal").trigger("click")})},addSubscriberScope.addSubscriber=function(){addSubscriberScope.submitForm=!0,addSubscriberScope.selectedItem.operator&&addSubscriberScope.selectedItem.imei&&SubscriberService.save(addSubscriberScope.selectedItem,function(result){loadPage($scope.page),angular.element(".modal").trigger("click")})},addSubscriberScope.selectCountry=function(country){for(var operators=[],i=0;i<addSubscriberScope.operators.length;i++)country.id===addSubscriberScope.operators[i].country.id&&operators.push(addSubscriberScope.operators[i]);addSubscriberScope.operators=operators};$modal({scope:addSubscriberScope,templateUrl:"views/subscriber/addEditSubscriber.html",show:!0})},$scope.selectSubscriber=function(subscriber){$scope.selectedSubscriber=subscriber,angular.forEach($scope.subscriberList,function(subscribe){void 0!=subscribe.trActive?subscribe.trActive=!1:subscribe.trActive=!1}),subscriber.trActive=!0},$scope.confirmUnregister=function(){SubscriberService.delete({id:$scope.selectedSubscriber.id},function(){loadPage($scope.page)})}))))}]),app.controller("cardPoolController",["$scope","CardPoolService","PaginationService","$modal","cardPool",function($scope,CardPoolService,PaginationService,$modal,cardPool){function change_size(){$scope.tableHeight=$(window).height()-225-$(".table-scroll").height()}function managePagination(cardDetails){$scope.cardList=cardDetails.content,$scope.totalPages=cardDetails.totalPages,$scope.isFirstPage=cardDetails.first,$scope.isLastPage=cardDetails.last,$scope.page=cardDetails.number,$scope.pagination=[],$scope.totalPages>1&&($scope.pagination=PaginationService.generatePagination($scope.totalPages,$scope.page)),$scope.limitStart=PaginationService.checkLimitStart($scope.page,$scope.pagination.length)}function loadPage(pageNo){CardPoolService.view({page:pageNo,size:$scope.pageSize,sort:"id"},function(response){managePagination(response)})}$scope.pageSize=10,$scope.page=0,"undefined"!=typeof cardPool.countries&&($scope.countries=cardPool.countries,"undefined"!=typeof cardPool.operators&&($scope.operators=cardPool.operators,"undefined"!=typeof cardPool.cardTypes&&($scope.cardTypes=cardPool.cardTypes.content,$scope.pagination=[],$scope.tableHeight=400,change_size(),"undefined"!=typeof cardPool.cardList&&($scope.cardList=cardPool.cardList.content,managePagination(cardPool.cardList),$scope.filter={country:"",operator:""},$scope.viewCardDetails=function(cardType){var viewCardScope=$scope.$new(!0);viewCardScope.cardTypes=$scope.cardTypes,viewCardScope.selectedCardType=cardType,viewCardScope.close=function(){angular.element(".modal").trigger("click")};$modal({scope:viewCardScope,templateUrl:"views/cardPool/cardDetails.html",show:!0})},$scope.deleteCard=function(card){CardPoolService.deleteCard({id:card.id},function(){$scope.cardList.splice($scope.cardList.indexOf(card),1)})},$scope.editCard=function(card){function filterOperators(country){var operators=[];editCardScope.operators=$scope.operators;for(var i=0;i<editCardScope.operators.length;i++)country.id===editCardScope.operators[i].country.id&&operators.push(editCardScope.operators[i]);editCardScope.operators=operators}function filterCardTypes(operator){var cardTypes=[];editCardScope.cardTypes=$scope.cardTypes;for(var i=0;i<editCardScope.cardTypes.length;i++)operator.id===editCardScope.cardTypes[i].networkOperator.id&&cardTypes.push(editCardScope.cardTypes[i]);editCardScope.cardTypes=cardTypes}var editCardScope=$scope.$new(!0);editCardScope.selectedCard=card,editCardScope.countries=$scope.countries,editCardScope.operators=$scope.operators,editCardScope.cardTypes=$scope.cardTypes,editCardScope.submitForm=!1,editCardScope.type="Edit",editCardScope.close=function(){angular.element(".modal").trigger("click")},editCardScope.editCardDetails=function(cardDetails){editCardScope.submitForm=!0,editCardScope.selectedCard.cardType&&editCardScope.selectedCard.serialNumber&&CardPoolService.updateCard(cardDetails,function(result){angular.element(".modal").trigger("click")})},editCardScope.selectCountry=function(country){filterOperators(country)},editCardScope.selectedCard.cardType.networkOperator.country&&(filterOperators(editCardScope.selectedCard.cardType.networkOperator.country),filterCardTypes(editCardScope.selectedCard.cardType.networkOperator)),editCardScope.selectOperator=function(operator){filterCardTypes(operator)};$modal({scope:editCardScope,templateUrl:"views/cardPool/addEditCard.html",show:!0})},$scope.addCard=function(card){function cardDTO(){var cardDetails={serialNumber:"",cardType:""};return cardDetails}var addCardScope=$scope.$new(!0);addCardScope.selectedCard=cardDTO(),addCardScope.countries=$scope.countries,addCardScope.operators=$scope.operators,addCardScope.cardTypes=$scope.cardTypes,addCardScope.submitForm=!1,addCardScope.type="Add",addCardScope.close=function(){angular.element(".modal").trigger("click")},addCardScope.addCardDetails=function(cardDetails){addCardScope.submitForm=!0,addCardScope.selectedCard.cardType&&addCardScope.selectedCard.serialNumber&&CardPoolService.addNewCard(cardDetails,function(result){loadPage(0),angular.element(".modal").trigger("click")})},addCardScope.selectCountry=function(country){var operators=[];addCardScope.operators=$scope.operators;for(var i=0;i<addCardScope.operators.length;i++)country.id===addCardScope.operators[i].country.id&&operators.push(addCardScope.operators[i]);addCardScope.operators=operators},addCardScope.selectOperator=function(operator){var cardTypes=[];addCardScope.cardTypes=$scope.cardTypes;for(var i=0;i<addCardScope.cardTypes.length;i++)operator.id===addCardScope.cardTypes[i].networkOperator.id&&cardTypes.push(addCardScope.cardTypes[i]);addCardScope.cardTypes=cardTypes};$modal({scope:addCardScope,templateUrl:"views/cardPool/addEditCard.html",show:!0})},$scope.loadNextPage=function(id){loadPage(id)},$scope.pageNavigation=function(type){"prev"===type?($scope.page=$scope.page-1,loadPage($scope.page)):($scope.page=$scope.page+1,loadPage($scope.page))}))))}]),app.controller("addNewCardController",["$scope","newCard","CardPoolService",function($scope,newCard,CardPoolService){$scope.cardDetails={country:"",operator:"",serialNumber:"",cardType:"",serialNo:""},"undefined"!=typeof newCard.countries&&($scope.countries=newCard.countries,"undefined"!=typeof newCard.cardTypes&&($scope.operators=newCard.operators,"undefined"!=typeof newCard.cardTypes&&($scope.cardTypeList=newCard.cardTypes,$scope.addNewCard=function(){var cardD={};cardD.serialNumber=$scope.cardDetails.serialNo,cardD.cardType=$scope.cardDetails.cardType,CardPoolService.addNewCard(cardD,function(result){console.log(result)})})))}]),app.controller("viewCardTypesController",["$scope","CardPoolService","cardTypeDetails","$modal","PaginationService",function($scope,CardPoolService,cardTypeDetails,$modal,PaginationService){function change_size(){$scope.tableHeight=$(window).height()-215-$(".table-scroll").height()}function managePagination(cardDetails){$scope.cardTypesList=cardDetails.content,$scope.totalPages=cardDetails.totalPages,$scope.isFirstPage=cardDetails.first,$scope.isLastPage=cardDetails.last,$scope.page=cardDetails.number,$scope.pagination=[],$scope.totalPages>1&&($scope.pagination=PaginationService.generatePagination($scope.totalPages,$scope.page)),$scope.limitStart=PaginationService.checkLimitStart($scope.page,$scope.pagination.length)}function getDetails(){var cardDetails={lable:"",networkOperator:{},allocation:[],validityPeriod:"",validityPeriod:"",valPeriodUnits:"",extraUsageCharge:"",ussdCode:""};return cardDetails}function allocationDTO(){var temp={};return temp.volume="",temp.units="",temp.startTime="",temp.endTime="",temp.serviceType="",temp}function loadPage(pageNo){CardPoolService.getCardType({page:pageNo,size:$scope.pageSize,sort:"id"},function(response){managePagination(response)})}$scope.pageSize=10,$scope.pagination=[],"undefined"!=typeof cardTypeDetails.countries&&($scope.countries=cardTypeDetails.countries,"undefined"!=typeof cardTypeDetails.operators&&($scope.operators=cardTypeDetails.operators,$scope.tableHeight=400,change_size(),"undefined"!=typeof cardTypeDetails.cardTypes&&(managePagination(cardTypeDetails.cardTypes),$scope.filter={country:"",operator:"",cardType:""},$scope.deleteCardType=function(type){CardPoolService.deleteCardType({id:type.id},function(){$scope.cardTypesList.splice($scope.cardTypesList.indexOf(type),1)})},$scope.editCardType=function(selectedType){var editCardTypeScope=$scope.$new(!0);editCardTypeScope.cardDetails=angular.copy(selectedType),editCardTypeScope.countries=$scope.countries,editCardTypeScope.operators=$scope.operators,editCardTypeScope.submitForm=!1,editCardTypeScope.type="Edit",editCardTypeScope.close=function(){angular.element(".modal").trigger("click")},editCardTypeScope.allocationDetails=allocationDTO(),editCardTypeScope.editCardDetails=function(){editCardTypeScope.submitForm=!0,editCardTypeScope.cardDetails.lable&&editCardTypeScope.cardDetails.networkOperator&&CardPoolService.updateCardType(editCardTypeScope.cardDetails,function(result){selectedType=result,angular.element(".modal").trigger("click")})},editCardTypeScope.addAllocation=function(){editCardTypeScope.allocationDetails.volume&&(editCardTypeScope.cardDetails.allocation.push(editCardTypeScope.allocationDetails),editCardTypeScope.allocationDetails=allocationDTO())},editCardTypeScope.removeAllocation=function(allocation){editCardTypeScope.cardDetails.allocation.splice(editCardTypeScope.cardDetails.allocation.indexOf(allocation),1)},editCardTypeScope.selectCountry=function(country){operators=[];for(var i=0;i<editCardTypeScope.operators.length;i++)country.id===editCardTypeScope.operators[i].country.id&&operators.push(editCardTypeScope.operators[i]);editCardTypeScope.operators=operators};$modal({scope:editCardTypeScope,templateUrl:"views/cardPool/addEditCardType.html",show:!0})},$scope.addNewCardType=function(){var addCardTypeScope=$scope.$new(!0);addCardTypeScope.cardDetails=getDetails(),addCardTypeScope.countries=$scope.countries,addCardTypeScope.operators=$scope.operators,addCardTypeScope.submitForm=!1,addCardTypeScope.type="Add",addCardTypeScope.allocationDetails=allocationDTO(),addCardTypeScope.addAllocation=function(){addCardTypeScope.allocationDetails.volume&&(addCardTypeScope.cardDetails.allocation.push(addCardTypeScope.allocationDetails),addCardTypeScope.allocationDetails=allocationDTO())},addCardTypeScope.allocationDetails=allocationDTO(),addCardTypeScope.removeAllocation=function(allocation){addCardTypeScope.cardDetails.allocation.splice(addCardTypeScope.cardDetails.allocation.indexOf(allocation),1)},addCardTypeScope.close=function(){angular.element(".modal").trigger("click")},addCardTypeScope.addCardDetails=function(){addCardTypeScope.submitForm=!0,addCardTypeScope.cardDetails.lable&&addCardTypeScope.cardDetails.networkOperator&&CardPoolService.addCardType(addCardTypeScope.cardDetails,function(result){CardPoolService.getCardType(function(result){$scope.cardTypesList=result}),$scope.cardTypesList.push(result),angular.element(".modal").trigger("click")})},addCardTypeScope.selectCountry=function(country){operators=[];for(var i=0;i<addCardTypeScope.operators.length;i++)country.id===addCardTypeScope.operators[i].country.id&&operators.push(addCardTypeScope.operators[i]);addCardTypeScope.operators=operators};$modal({scope:addCardTypeScope,templateUrl:"views/cardPool/addEditCardType.html",show:!0})},$scope.loadNextPage=function(id){loadPage(id)},$scope.pageNavigation=function(type){"prev"===type?($scope.page=$scope.page-1,loadPage($scope.page)):($scope.page=$scope.page+1,loadPage($scope.page))})))}]),app.controller("deliveryLogController",["$scope","Logs","DeliveryLogService",function($scope,Logs,DeliveryLogService){$scope.deliveryLog={},$scope.pageSize=10,console.log($scope.pageSize)}]),app.controller("crmController",["$scope","$modal","CrmService","$routeParams",function($scope,$modal,CrmService,$routeParams){function getTabIndex(tabType){for(var index="",i=0;i<$scope.tabs.length;i++)if($scope.tabs[i].type===tabType)return index=i}function loadContent(){"gsm"===$scope.tabs[$scope.selectedTab].type?CrmService.view({},function(response){}):"reload"===$scope.tabs[$scope.selectedTab].type?($scope.reloadData.history=[{date:1484795795221,cardType:{id:2,lable:"99 Data",networkOperator:{id:2,operatorName:"Dialog",mnc:2,mcc:413,isActive:!0,country:{id:1,countryName:"Sri Lanka"},active:!0},validityPeriod:3,valPeriodUnits:"Days",ussdCode:"#123#PIN#",extraUsageCharge:.5,isActive:!0,allocation:[{id:3,serviceType:"Data",volume:100,units:"MB",startTime:288e5,endTime:792e5,isActive:!0,active:!0}],active:!0},transactionId:4234232355,status:"Success",note:"Low balance"},{date:1484795795221,cardType:{id:2,lable:"99 Data",networkOperator:{id:2,operatorName:"Dialog",mnc:2,mcc:413,isActive:!0,country:{id:1,countryName:"Sri Lanka"},active:!0},validityPeriod:3,valPeriodUnits:"Days",ussdCode:"#123#PIN#",extraUsageCharge:.5,isActive:!0,allocation:[{id:3,serviceType:"Data",volume:100,units:"MB",startTime:288e5,endTime:792e5,isActive:!0,active:!0}],active:!0},transactionId:4234232360,status:"Success",note:"Low balance"}],CrmService.view({},function(response){})):"event"===$scope.tabs[$scope.selectedTab].type?CrmService.view({},function(response){}):"xboss"===$scope.tabs[$scope.selectedTab].type?CrmService.view({},function(response){}):"complains"===$scope.tabs[$scope.selectedTab].type&&CrmService.view({},function(response){})}if($scope.tabs=[{title:"GSM History",url:"views/crm/gsmHistory.html",active:!0,type:"gsm"},{title:"Reload History",url:"views/crm/reloadHistory.html",active:!1,type:"reload"},{title:"Event History",url:"views/crm/eventHistory.html",active:!1,type:"event"},{title:"XBOSS History",url:"views/crm/xbossHistory.html",active:!1,type:"xboss"},{title:"Complains",url:"views/crm/complainsHistory.html",active:!1,type:"complains"}],$scope.gsmDSata={},$scope.reloadData={},$scope.eventData={},$scope.xbossData={},$scope.complainsData={},$routeParams.type){angular.forEach($scope.tabs,function(tab){tab.active=!1});var index=getTabIndex($routeParams.type);$scope.tabs[index].active=!0,$scope.selectedTab=index,loadContent()}}]);